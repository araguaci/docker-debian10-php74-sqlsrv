FROM debian

ENV APACHE_LOCK_DIR="/var/lock"
ENV APACHE_PID_FILE="/var/run/apache2.pid"
ENV APACHE_RUN_USER="www-data"
ENV APACHE_RUN_GROUP="www-data"
ENV APACHE_LOG_DIR="/var/log/apache2"

LABEL app="Debian 10 para Laravel e SQL Server"
LABEL description="Imagem Docker com Debian 10, Apache2, PHP7.4 e drivers SQL Server"
LABEL version="1.0.0"

RUN apt update \
   && DEBIAN_FRONTEND=noninteractive apt install -y apt-utils sudo curl gnupg vim zip unzip \
   nano wget git lsb-release apt-transport-https ca-certificates 
RUN wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg \
   && echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" | tee /etc/apt/sources.list.d/php.list 
RUN apt update 
RUN apt install -y php7.4 && apt install -y php7.4-sqlite3 php7.4-bcmath php7.4-bz2 php7.4-intl php7.4-gd \
    && apt install -y php7.4-mbstring php7.4-mysql php7.4-zip php7.4-mbstring \
    && apt install -y php7.4-xml php7.4-dev
RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
RUN curl https://packages.microsoft.com/config/debian/10/prod.list > /etc/apt/sources.list.d/mssql-release.list
RUN apt update
RUN ACCEPT_EULA=Y apt-get install -y msodbcsql17 && ACCEPT_EULA=Y apt-get install  mssql-tools
RUN echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
RUN apt install -y unixodbc-dev

# INSTALLATION
RUN apt update && apt dist-upgrade -y && \
# DEPENDENCIES #############################################################
apt install -y wget curl apt-transport-https ca-certificates gnupg2 cron && \
# PHP DEB.SURY.CZ ##########################################################
wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg && \
echo "deb https://packages.sury.org/php/ buster main" > /etc/apt/sources.list.d/php.list && \
wget -O- http://nginx.org/keys/nginx_signing.key | apt-key add - && \
echo "deb http://nginx.org/packages/debian/ buster nginx" > /etc/apt/sources.list.d/nginx.list && \
echo "deb-src http://nginx.org/packages/debian/ buster nginx" >> /etc/apt/sources.list.d/nginx.list 

RUN set -ex && \
apt-get update && \
apt-get install -y build-essential && \
apt-get install -y libboost-all-dev && \
apt-get install -y libssl-dev && \
apt-get install -y g++ && \
apt-get install -y make && \
apt-get install -y git 

RUN wget https://packages.microsoft.com/debian/10/prod/pool/main/m/msodbcsql17/msodbcsql17_17.10.1.1-1_amd64.deb
RUN ACCEPT_EULA=Y dpkg -i msodbcsql17_17.10.1.1-1_amd64.deb

RUN wget http://security.debian.org/debian-security/pool/updates/main/o/openssl/libssl1.1_1.1.1n-0+deb10u6_amd64.deb
RUN dpkg -i libssl1.1_1.1.1n-0+deb10u6_amd64.deb

RUN wget http://ftp.us.debian.org/debian/pool/main/o/openldap/libldap-2.4-2_2.4.47+dfsg-3+deb10u7_amd64.deb
RUN dpkg -i libldap-2.4-2_2.4.47+dfsg-3+deb10u7_amd64.deb

RUN wget http://security.debian.org/debian-security/pool/updates/main/p/php7.4/php7.4_7.4.33-1+deb11u4_all.deb
RUN dpkg -i php7.4_7.4.33-1+deb11u4_all.deb

RUN apt install ca-certificates apt-transport-https wget gnupg  \
wget -q https://packages.sury.org/php/apt.gpg -O- | apt-key add -  \
echo "deb https://packages.sury.org/php/ buster main" | tee /etc/apt/sources.list.d/php.list  \
apt update  \
apt install php7.4 

RUN phpenmod -v 7.4 sqlsrv pdo_sqlsrv && service apache2 restart
RUN curl -s https://getcomposer.org/installer | php && mv composer.phar /usr/bin/composer
RUN chown www-data:www-data /var/lock && chown www-data:www-data /var/run && chown www-data:www-data /var/log \
    && chown www-data:www-data /var/log/apache2/error.log && chown www-data:www-data -R /var/www
RUN echo "<VirtualHost *:80> \n\
	ServerAdmin webmaster@localhost \n\
	DocumentRoot /var/www/html \n\
	<Directory /var/www/html> \n\
	    AllowOverride All \n\
            Require all granted \n\
       </Directory> \n\
	ErrorLog ${APACHE_LOG_DIR}/error.log \n\
	CustomLog ${APACHE_LOG_DIR}/access.log combined \n\
</VirtualHost>" > /etc/apache2/sites-available/000-default.conf
RUN a2enmod rewrite

VOLUME /var/www
WORKDIR /var/www
EXPOSE 80 1433

CMD ["/usr/sbin/apache2ctl", "-D", "FOREGROUND"]